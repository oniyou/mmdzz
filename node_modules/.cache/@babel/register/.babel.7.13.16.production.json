{
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\git_repository\\\\mmdzz\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"D:\\\\git_repository\\\\mmdzz\",\"filename\":\"D:\\\\git_repository\\\\mmdzz\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"D:\\\\git_repository\\\\mmdzz\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\git_repository\\mmdzz\\",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "D:\\git_repository\\mmdzz",
      "filename": "D:\\git_repository\\mmdzz\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "D:\\git_repository\\mmdzz",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\git_repository\\mmdzz\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\git_repository\\mmdzz\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\git_repository\\mmdzz\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar exec = require('child_process').exec;\n\nvar child1 = exec('node ' + 'mmdzz.js', function (err, stdout, stderr) {\n  if (err) throw err;\n  console.log(stdout);\n});\nvar child2 = exec('node ' + 'smz.js', function (err, stdout, stderr) {\n  if (err) throw err;\n  console.log(stdout);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4ZWMiLCJyZXF1aXJlIiwiY2hpbGQxIiwiZXJyIiwic3Rkb3V0Iiwic3RkZXJyIiwiY29uc29sZSIsImxvZyIsImNoaWxkMiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxlQUFELENBQVAsQ0FBeUJELElBQXBDOztBQUVBLElBQUlFLE1BQU0sR0FBR0YsSUFBSSxDQUFDLFVBQVUsVUFBWCxFQUF1QixVQUFTRyxHQUFULEVBQWNDLE1BQWQsRUFBc0JDLE1BQXRCLEVBQThCO0FBQ3BFLE1BQUlGLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RHLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxNQUFaO0FBQ0QsQ0FIZ0IsQ0FBakI7QUFLQSxJQUFJSSxNQUFNLEdBQUdSLElBQUksQ0FBQyxVQUFVLFFBQVgsRUFBcUIsVUFBU0csR0FBVCxFQUFjQyxNQUFkLEVBQXNCQyxNQUF0QixFQUE4QjtBQUNsRSxNQUFJRixHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNURyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsTUFBWjtBQUNELENBSGdCLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxnaXRfcmVwb3NpdG9yeVxcbW1kenpcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBleGVjID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpLmV4ZWM7XHJcblxyXG52YXIgY2hpbGQxID0gZXhlYygnbm9kZSAnICsgJ21tZHp6LmpzJywgZnVuY3Rpb24oZXJyLCBzdGRvdXQsIHN0ZGVycikge1xyXG4gIGlmIChlcnIpIHRocm93IGVycjtcclxuICBjb25zb2xlLmxvZyhzdGRvdXQpO1xyXG59KVxyXG5cclxudmFyIGNoaWxkMiA9IGV4ZWMoJ25vZGUgJyArICdzbXouanMnLCBmdW5jdGlvbihlcnIsIHN0ZG91dCwgc3RkZXJyKSB7XHJcbiAgaWYgKGVycikgdGhyb3cgZXJyO1xyXG4gIGNvbnNvbGUubG9nKHN0ZG91dCk7XHJcbn0pXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "exec",
        "require",
        "child1",
        "err",
        "stdout",
        "stderr",
        "console",
        "log",
        "child2"
      ],
      "mappings": ";;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,IAApC;;AAEA,IAAIE,MAAM,GAAGF,IAAI,CAAC,UAAU,UAAX,EAAuB,UAASG,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8B;AACpE,MAAIF,GAAJ,EAAS,MAAMA,GAAN;AACTG,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,CAHgB,CAAjB;AAKA,IAAII,MAAM,GAAGR,IAAI,CAAC,UAAU,QAAX,EAAqB,UAASG,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8B;AAClE,MAAIF,GAAJ,EAAS,MAAMA,GAAN;AACTG,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,CAHgB,CAAjB",
      "sourceRoot": "D:\\git_repository\\mmdzz\\",
      "sourcesContent": [
        "var exec = require('child_process').exec;\r\n\r\nvar child1 = exec('node ' + 'mmdzz.js', function(err, stdout, stderr) {\r\n  if (err) throw err;\r\n  console.log(stdout);\r\n})\r\n\r\nvar child2 = exec('node ' + 'smz.js', function(err, stdout, stderr) {\r\n  if (err) throw err;\r\n  console.log(stdout);\r\n})\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1618949651091
  }
}